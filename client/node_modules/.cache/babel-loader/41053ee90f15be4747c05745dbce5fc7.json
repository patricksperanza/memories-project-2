{"ast":null,"code":"var _jsxFileName = \"/Users/patricksperanza/Desktop/Repos/memories-project-2/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nconst Form = _ref => {\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      var _user$result;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, currentId ? \"Editing\" : \"Creating\", \" a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(\",\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      setPostData({\n        ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/patricksperanza/Desktop/Repos/memories-project-2/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\"\nimport FileBase from \"react-file-base64\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport useStyles from \"./styles\"\nimport { createPost, updatePost } from \"../../actions/posts\"\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  })\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((p) => p._id === currentId) : null\n  )\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const user = JSON.parse(localStorage.getItem(\"profile\"))\n\n  useEffect(() => {\n    if (post) setPostData(post)\n  }, [post])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (currentId) {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }))\n    } else {\n      dispatch(createPost({ ...postData, name: user?.result?.name }))\n    }\n    clear()\n  }\n\n  const clear = () => {\n    setCurrentId(null)\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    })\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) => {\n              setPostData({ ...postData, selectedFile: base64 })\n            }}\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  )\n}\n\nexport default Form\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}